---
title: "05: `tidyr`"
format: 
  html:
    toc: true
    toc-title: Tabla de contenidos
    self-contained: true

editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

## Pregunta 1

Considere los datos y calcule:

1. La variación porcentual de la tasa de desempleo respecto al mes anterior
1. La variación porcentual respecto al mismo mes del año anterior.
1. La variación porcentual respecto a diciembre del año anterior.
1. Crear 1 gráfico con `ggplot2` mostrando estas 4 series (hint: combo `pivot_longer` + `facet_wrap`).

```{r}
library(tidyverse)

ddesempleo <- economics |> 
  select(fecha = date, desempleo = uempmed) |> 
  filter(year(fecha) > 2005)

glimpse(ddesempleo)

ggplot(ddesempleo) +
  geom_line(aes(fecha, desempleo)) +
  scale_x_date(breaks = "year", date_labels = "%Y") +
  theme_minimal()
```

### Solución 
1. 

```{r}
ddesempleo <- ddesempleo |> 
  mutate(
    valor_mes_anterior = lag(desempleo), # explicito sería lag(desempleo, n= 1)
    variación_mensual = desempleo/valor_mes_anterior - 1
    )

ddesempleo
```

2. 

```{r}
ddesempleo <- ddesempleo |> 
  mutate(
    valor_anio_anterior = lag(desempleo, n = 12),
    variación_anual = desempleo/valor_anio_anterior - 1
    )

ddesempleo

tail(ddesempleo, 10)
```

3. Podemos utilizar una data auxiliar que tenga los diciembres, luego hacer join por anio. 

```{r}
# d   de data
# des de desempleo
# dic de diciembre
ddesdic <- ddesempleo |> 
  filter(month(fecha) == 12) |> 
  mutate(anio = year(fecha)) |> 
  select(anio, desempleo_dic = desempleo)

ddesdic

ddesempleo <- ddesempleo |> 
  mutate(anio_anterior = year(fecha) - 1) |> 
  left_join(ddesdic, by = join_by(anio_anterior == anio)) |> 
  mutate(
    variación_dic_anterior = desempleo/desempleo_dic - 1
    )

glimpse(ddesempleo)

```

4. 

```{r}
ddesempleo <- ddesempleo |> 
  select(fecha, desempleo, starts_with("variación"))

tail(ddesempleo)

ddesempleo_long <- pivot_longer(ddesempleo, cols = -fecha)

ggplot(ddesempleo_long, aes(fecha, value, group = name)) +
  geom_line() +
  geom_smooth() +
  facet_wrap(vars(name), scales = "free_y") +
  theme_minimal()
```

## Pregunta 2

Considere los datos de `vuelos` y `aeropuertos` del paquete datos:

1. Simplifique las tablas seleccionado para `vuelos` las columnas `origen`,
`destino` y para `aeropuertos` las columnas ` codigo_aeropuerto`, `latitud` y `longitud`:
1. De la tabla de vuelos obtenga la cantidad de vuelos realizados para cada par `origen` 
`destino`.
1. A la tabla anterior incluya las posición geográfica tanto del origen como del destino
utilizando la tabla `aeropuertos`.
1. En un mapa muestre los 10 vuelos más largos, y los 10 vuelos más recurrentes.

### Solución

1. 
```{r}
vuelos <- select(vuelos, fecha, origen, destino)
```

